// Copyright (C) 2018 Siavoosh Payandeh Azad, Behrad Niazmand
// ----------------------------------------------------------
//  This file is automatically generated!
//  Here are the parameters:
//       network size x: 2
//       network size y: 2
//       Data width: 32
// ----------------------------------------------------------

#include "network_2x2_credit_based.h"


//        organizaiton of the network:
//     x --------------->
//  y         ----       ----
//  |        | 0  | --- | 1  |
//  |         ----       ----
//  |          |          |
//  |         ----       ----
//  |        | 2  | --- | 3  |
//  v         ----       ----
//

void network_2x2::network_2x2_proc()
{
    // -------------------------------------------------------------
    // binding the routers together
    // vertical ins/outs
    // connecting router: 0 to router: 2 and vice versa
    RX_N_2 = TX_S_0.read();
    RX_S_0 = TX_N_2.read();
    // -----------------
    // connecting router: 1 to router: 3 and vice versa
    RX_N_3 = TX_S_1.read();
    RX_S_1 = TX_N_3.read();
    // -----------------
    
    // horizontal ins/outs
    // connecting router: 0 to router: 1 and vice versa
    RX_E_0 = TX_W_1.read();
    RX_W_1 = TX_E_0.read();
    // -----------------
    // connecting router: 2 to router: 3 and vice versa
    RX_E_2 = TX_W_3.read();
    RX_W_3 = TX_E_2.read();
    // -----------------
    
    // ---------------------------------------------------------------
    // binding the routers together
    // connecting router: 0 to router: 2 and vice versa
    valid_in_N_2  = valid_out_S_0.read();
    valid_in_S_0  = valid_out_N_2.read();
    credit_in_S_0 = credit_out_N_2.read();
    credit_in_N_2 = credit_out_S_0.read();
    // -----------------
    // connecting router: 1 to router: 3 and vice versa
    valid_in_N_3  = valid_out_S_1.read();
    valid_in_S_1  = valid_out_N_3.read();
    credit_in_S_1 = credit_out_N_3.read();
    credit_in_N_3 = credit_out_S_1.read();
    // -----------------
    
    // connecting router: 0 to router: 1 and vice versa
    valid_in_E_0  = valid_out_W_1.read();
    valid_in_W_1  = valid_out_E_0.read();
    credit_in_W_1 = credit_out_E_0.read();
    credit_in_E_0 = credit_out_W_1.read();
    // -----------------
    // connecting router: 2 to router: 3 and vice versa
    valid_in_E_2  = valid_out_W_3.read();
    valid_in_W_3  = valid_out_E_2.read();
    credit_in_W_3 = credit_out_E_2.read();
    credit_in_E_2 = credit_out_W_3.read();
    // -----------------
}

SC_MODULE_EXPORT(network_2x2);

